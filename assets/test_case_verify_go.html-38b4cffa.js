import{_ as i,r as s,o as t,c as d,a as e,b as a,d as r,e as o}from"./app-00f3c486.js";const c={},l=o(`<h1 id="【go】单元测试有效性验证" tabindex="-1"><a class="header-anchor" href="#【go】单元测试有效性验证" aria-hidden="true">#</a> 【Go】单元测试有效性验证</h1><h2 id="背景" tabindex="-1"><a class="header-anchor" href="#背景" aria-hidden="true">#</a> 背景</h2><p>单元测试是用来对一个模块、一个函数或者一个类来进行正确性检验的测试工作。也是提升现网质量的最广泛最简单有效的方式。</p><p>但是在实际开发工作中，由于工作繁忙而遗漏或缺乏对单元测试的正确认识，有些开发盲目追求高覆盖率，没有对单元测试做断言，这样的单元测试用例属于无效用例。 为了检测此类无效用例，业务侧找来了代码分析介入，进行单元测试有效性验证。</p><h2 id="需求" tabindex="-1"><a class="header-anchor" href="#需求" aria-hidden="true">#</a> 需求</h2><ul><li>判断一个单元测试用例中是否存在断言。</li></ul><h3 id="示例" tabindex="-1"><a class="header-anchor" href="#示例" aria-hidden="true">#</a> 示例</h3><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>// Bad case
func Test_Demo1(t *testing.T) {
}


// Good case
func Test_Demo2(t *testing.T) {
    assert.NoError(t, err)
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="快速体验" tabindex="-1"><a class="header-anchor" href="#快速体验" aria-hidden="true">#</a> 快速体验</h2><p>TCA 现已支持 Go 语言的单元测试有效行验证，可以在 TCA 分析方案中搜索勾选以下规则包，快速体验。</p><h3 id="启用规则包" tabindex="-1"><a class="header-anchor" href="#启用规则包" aria-hidden="true">#</a> 启用规则包</h3><p>分析方案 -&gt; 代码检查 -&gt; 单元测试有效性验证 -&gt; 启用/查看规则</p><h3 id="支持框架" tabindex="-1"><a class="header-anchor" href="#支持框架" aria-hidden="true">#</a> 支持框架</h3>`,13),h=e("li",null,"Go语言官方单测框架testing",-1),u={href:"https://github.com/stretchr/testify",target:"_blank",rel:"noopener noreferrer"},_={href:"https://github.com/smartystreets/goconvey",target:"_blank",rel:"noopener noreferrer"},v=e("h3",{id:"扩展",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#扩展","aria-hidden":"true"},"#"),a(" 扩展")],-1),f=e("p",null,"更多语言更多单元测试框架支持，欢迎提 issue 进行咨询扩展。",-1);function m(b,g){const n=s("ExternalLinkIcon");return t(),d("div",null,[l,e("ul",null,[h,e("li",null,[e("a",u,[a("testify"),r(n)])]),e("li",null,[e("a",_,[a("goconvey"),r(n)])])]),v,f])}const x=i(c,[["render",m],["__file","test_case_verify_go.html.vue"]]);export{x as default};
