import{_ as s,r as n,o as c,c as r,a as e,b as o,d as t,w as l,e as a}from"./app-00f3c486.js";const p={},h=a('<h1 id="常驻节点分析" tabindex="-1"><a class="header-anchor" href="#常驻节点分析" aria-hidden="true">#</a> 常驻节点分析</h1><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>TCA 客户端除了通过<code>localscan</code>命令启动单次的代码分析，也可以作为一个分布式分析节点启动，作为常驻进程，多个节点可以分布式并行执行服务端下发的任务，提高扫描效率。</p><p>和本地分析一样，需要先安装环境和必要的工具，并配置好服务端地址。</p></div><h2 id="使用场景" tabindex="-1"><a class="header-anchor" href="#使用场景" aria-hidden="true">#</a> 使用场景</h2><ul><li><p>希望通过并行执行分析来提高分析效率</p></li><li><p>希望尽量使用公共资源或使用专机资源</p></li></ul><h2 id="前置步骤" tabindex="-1"><a class="header-anchor" href="#前置步骤" aria-hidden="true">#</a> 前置步骤</h2>',5),u=a('<h2 id="节点配置" tabindex="-1"><a class="header-anchor" href="#节点配置" aria-hidden="true">#</a> 节点配置</h2><h3 id="配置-config-ini-文件" tabindex="-1"><a class="header-anchor" href="#配置-config-ini-文件" aria-hidden="true">#</a> 配置 <code>config.ini</code> 文件</h3><ol><li><p>将<code>&lt;Server IP地址&gt;</code>替换成实际的 TCA 平台 IP（可包含端口号）。</p></li><li><p>国内使用 github 拉取网络较慢，推荐使用腾讯工蜂拉取，需要修改以下配置：</p></li></ol>',3),_=e("li",null,[o("修改 "),e("code",null,"TOOL_CONFIG_URL=https://git.code.tencent.com/TCA/tca-tools/puppy-tools-config.git")],-1),g={href:"https://git.code.tencent.com",target:"_blank",rel:"noopener noreferrer"},m=e("code",null,"TOOL_LOAD_ACCOUNT ",-1),b=e("h3",{id:"启动常驻节点",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#启动常驻节点","aria-hidden":"true"},"#"),o(" 启动常驻节点")],-1),v=e("p",null,[o("从TCA前端页面中获取 "),e("code",null,"token"),o("，前往 "),e("strong",null,"个人中心-个人令牌-复制Token")],-1),E={class:"custom-container tip"},f=e("p",{class:"custom-container-title"},"TIP",-1),A=e("p",null,[o("节点仅能分析该"),e("code",null,"token"),o("具有权限的项目，因此如设置公共的分析节点，推荐使用超级管理员的token。")],-1),x=e("li",null,[e("p",null,[o("如启动团队节点，还需获取团队编号：org_sid，获取方式： 从 TCA 平台项目概览页面URL中获取，项目概览URL格式："),e("code",null,"http://{域名}/t/{org_sid}/p/{team_name}/profile")])],-1),k=a(`<p><strong>两种方式可选启动客户端：</strong></p><h4 id="使用客户端源码启动常驻节点" tabindex="-1"><a class="header-anchor" href="#使用客户端源码启动常驻节点" aria-hidden="true">#</a> 使用客户端源码启动常驻节点</h4><ul><li>如启动公共节点，需进入到源码的<code>client</code>目录下，执行命令：</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>python3 codepuppy.py -l codepuppy.log start -t &lt;token&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>如启动团队节点，需增加参数 org_sid：</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>python3 codepuppy.py -l codepuppy.log start -t &lt;token&gt; --org-sid &lt;org_sid&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>启动后，可以在命令行输出或<code>codepuppy.log</code>中查看运行日志，如果未报异常，且输出<code>task loop is started.</code>，表示节点已经正常启动。</p><h4 id="使用客户端二进制启动常驻节点" tabindex="-1"><a class="header-anchor" href="#使用客户端二进制启动常驻节点" aria-hidden="true">#</a> 使用客户端二进制启动常驻节点</h4><ul><li>如启动公共节点，需进入到源码的<code>client</code>目录下，执行命令：</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>./codepuppy -l codepuppy.log start -t &lt;token&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>如启动团队节点，需增加参数 org_sid：</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>./codepuppy -l codepuppy.log start -t &lt;token&gt; --org-sid &lt;org_sid&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>启动后，可以在命令行输出或<code>codepuppy.log</code>中查看运行日志，如果未报异常，且输出<code>task loop is started.</code>，表示节点已经正常启动。</p><h3 id="管理节点" tabindex="-1"><a class="header-anchor" href="#管理节点" aria-hidden="true">#</a> 管理节点</h3><p>常驻节点首次启动后，需要到节点管理页面管理节点状态：</p><ol><li><p><strong>设置节点状态：</strong> 进入 TCA 节点管理页面。<code>管理入口</code>-<code>节点管理</code>，可以看到当前在线的节点，节点状态默认为<code>不可用</code>，需将其设置为**<code>活跃</code>**才可用于接收和执行任务。 也可以按需修改节点名称、标签、负责人等信息。</p></li><li><p>（按需可选）<strong>配置节点工具进程：</strong> 进入<strong>工具进程配置</strong>页面，对节点支持的工具进程进行管理（默认会全部勾选），未勾选的工具进程，将不会在该节点上执行。</p></li><li><p>（按需可选）<strong>设置节点标签：</strong> 节点标签会与分析方案中的运行环境标签进行匹配，只有相同标签的任务才会下发到该机器节点上。</p></li></ol>`,16);function y(C,T){const d=n("RouterLink"),i=n("ExternalLinkIcon");return c(),r("div",null,[h,e("p",null,[o("节点机器上具备客户端及客户端相关依赖环境，可查阅"),t(d,{to:"/en/guide/%E5%AE%A2%E6%88%B7%E7%AB%AF/%E6%9C%AC%E5%9C%B0%E5%88%86%E6%9E%90.html#%E5%89%8D%E7%BD%AE%E6%AD%A5%E9%AA%A4"},{default:l(()=>[o("本地分析-前置步骤")]),_:1}),o("部分进行配置。")]),u,e("ul",null,[_,e("li",null,[o("将"),e("a",g,[o("腾讯工蜂"),t(i)]),o("的账号密码填写到"),m,o("中。（注：没有腾讯工蜂账号的需要注册；由于腾讯工蜂的开源仓库也要求使用账号才能拉取，所以此处必须填写账号密码）")])]),b,e("ul",null,[e("li",null,[v,e("div",E,[f,A,e("p",null,[o("可以通过"),t(d,{to:"/en/guide/%E5%90%8E%E5%8F%B0%E7%AE%A1%E7%90%86/%E7%94%A8%E6%88%B7%E7%AE%A1%E7%90%86.html"},{default:l(()=>[o("用户管理页面")]),_:1}),o("查看到哪些用户是超级管理员。")])])]),x]),k])}const B=s(p,[["render",y],["__file","常驻节点分析.html.vue"]]);export{B as default};
