# -*- coding: utf-8 -*-
# Copyright (c) 2021-2025 Tencent
#
# This source code file is made available under MIT License
# See LICENSE for details
# ==============================================================================

# Generated by Django 3.1.12 on 2021-11-29 11:34
"""
authen数据迁移脚本
0001_initial
"""
import django.db.models.manager
from django.conf import settings
from django.db import migrations, models

import apps.base.basemodel


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('base', '0001_initial'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            # authen_codedoguser
            name='CodeDogUser',
            fields=[
                ('user',
                 models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False,
                                      to='auth.user')),
                ('nickname', models.CharField(help_text='用户昵称', max_length=32)),
                ('chinese_name', models.CharField(blank=True, help_text='用户中文名', max_length=32, null=True)),
                ('status', models.IntegerField(choices=[(1, '已激活'), (2, '待激活'), (3, '已过期'), (99, '禁止')],
                                               default=1, help_text='用户状态')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email')),
                ('avatar', models.URLField(blank=True, null=True, verbose_name='头像地址')),
                ('tel_number', models.CharField(blank=True, help_text='用户手机号', max_length=32, null=True)),
                ('level', models.IntegerField(choices=[(1, '普通用户'), (2, 'VIP用户'), (3, '超级VIP用户')],
                                              default=1, help_text='用户级别')),
            ],
        ),
        migrations.CreateModel(
            # authen_organization
            name='Organization',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time',
                 models.DateTimeField(db_index=True, default=apps.base.basemodel.utcnow, verbose_name='创建时间')),
                ('modified_time',
                 models.DateTimeField(db_index=True, default=apps.base.basemodel.utcnow, verbose_name='最近修改时间')),
                ('deleted_time', models.DateTimeField(blank=True, db_index=True, null=True, verbose_name='删除时间')),
                ('org_sid', models.CharField(help_text='组织短编号', max_length=64, unique=True)),
                ('name', models.CharField(help_text='组织名称', max_length=255)),
                ('address', models.CharField(blank=True, help_text='组织地址', max_length=255, null=True)),
                ('description', models.TextField(blank=True, help_text='团队描述信息', null=True)),
                ('certificated', models.BooleanField(default=False, help_text='组织认证')),
                ('owner', models.CharField(blank=True, help_text='组织负责人', max_length=255, null=True)),
                ('business_license', models.CharField(blank=True, help_text='营业执照编号', max_length=64, null=True)),
                ('tel_number', models.CharField(blank=True, help_text='组织手机号', max_length=32, null=True)),
                ('status', models.IntegerField(choices=[(1, '已激活'), (2, '待激活'), (3, '已过期'), (99, '禁止')],
                                               default=2, help_text='组织状态')),
                ('level',
                 models.IntegerField(choices=[(1, '普通团队'), (2, 'VIP团队'), (3, '超级VIP团队')], default=1,
                                     help_text='组织级别')),
                ('db_key', models.CharField(default='default', help_text='关联数据库', max_length=32)),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL,
                                              related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='创建人')),
                ('deleter', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL,
                                              related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='删除人')),
                ('modifier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL,
                                               related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='最近修改人')),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model, apps.base.basemodel.BasePerm),
            managers=[
                ('everything', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            # authen_scmaccount
            name='ScmAccount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scm_username', models.CharField(max_length=128, verbose_name='代码库帐号')),
                ('scm_password', models.CharField(max_length=256, verbose_name='代码库密码')),
                ('scm_platform', models.IntegerField(
                    choices=[(1, 'tgit'), (2, 'tgitsaas'), (3, 'coding'), (4, 'github'), (5, 'gitee'), (6, 'gitlab'),
                             (7, 'other')], default=1, help_text='凭证所属平台')),
                ('scm_platform_desc', models.CharField(blank=True, max_length=32, null=True, verbose_name='补充其他所属平台')),
                ('auth_origin', models.ForeignKey(blank=True, help_text='创建渠道', null=True,
                                                  on_delete=django.db.models.deletion.SET_NULL, to='base.origin')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'scm_username', 'auth_origin', 'scm_platform')},
            },
        ),
        migrations.CreateModel(
            # authen_scmsshinfo
            name='ScmSshInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('indentity', models.CharField(max_length=128, verbose_name='凭据id')),
                ('name', models.CharField(max_length=128, verbose_name='名称')),
                ('git_token', models.CharField(blank=True, max_length=128, null=True, verbose_name='Git 私人令牌')),
                ('ssh_private_key', models.TextField(verbose_name='ssh private key')),
                ('password', models.TextField(blank=True, null=True, verbose_name='代码库密码')),
                ('scm_platform', models.IntegerField(
                    choices=[(1, 'tgit'), (2, 'tgitsaas'), (3, 'coding'), (4, 'github'), (5, 'gitee'), (6, 'gitlab'),
                             (7, 'other')], default=1, help_text='凭证所属平台')),
                ('scm_platform_desc', models.CharField(blank=True, max_length=32, null=True,
                                                       verbose_name='补充所属平台')),
                ('auth_origin', models.ForeignKey(blank=True, help_text='创建渠道', null=True,
                                                  on_delete=django.db.models.deletion.SET_NULL, to='base.origin')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'indentity', 'auth_origin', 'scm_platform')},
            },
        ),
        migrations.CreateModel(
            # authen_scmbaseauth
            name='ScmBaseAuth',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('auth_key', models.CharField(help_text='关联指定代码库或指定项目', max_length=56, unique=True)),
                ('auth_type',
                 models.CharField(choices=[('password', '账号密码'), ('ssh_token', 'SSH + Token授权')],
                                  help_text='授权方式', max_length=56)),
                ('created_time', models.DateTimeField(auto_now_add=True, help_text='创建时间')),
                ('modified_time', models.DateTimeField(auto_now=True, help_text='修改时间')),
                ('scm_account', models.ForeignKey(blank=True, help_text='关联的用户名和密码', null=True,
                                                  on_delete=django.db.models.deletion.SET_NULL,
                                                  to='authen.scmaccount')),
                ('scm_ssh', models.ForeignKey(blank=True, help_text='关联的SSH信息', null=True,
                                              on_delete=django.db.models.deletion.SET_NULL, to='authen.scmsshinfo')),
            ],
        ),
        migrations.CreateModel(
            name='OrganizationPermissionApply',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('apply_time', models.DateTimeField(auto_now_add=True, help_text='申请时间')),
                ('apply_msg', models.CharField(help_text='申请理由', max_length=255)),
                ('status', models.IntegerField(choices=[(1, '申请中'), (2, '审批完成'), (3, '取消申请')], default=1,
                                               help_text='申请状态')),
                ('check_result', models.IntegerField(blank=True, choices=[(1, '审批通过'), (2, '审批不通过')],
                                                     help_text='审批结果', null=True)),
                ('check_remark', models.CharField(blank=True, help_text='审批备注', max_length=255, null=True)),
                ('check_time', models.DateTimeField(blank=True, help_text='审批时间', null=True)),
                ('applicant', models.ForeignKey(blank=True, help_text='申请人', null=True,
                                                on_delete=django.db.models.deletion.SET_NULL,
                                                to=settings.AUTH_USER_MODEL)),
                ('checker', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL,
                                              related_name='+', to=settings.AUTH_USER_MODEL)),
                ('organization', models.ForeignKey(blank=True, help_text='申请团队', null=True,
                                                   on_delete=django.db.models.deletion.SET_NULL,
                                                   to='authen.organization')),
            ],
        ),
        migrations.CreateModel(
            # authen_codedoguserpermissionapply
            name='CodeDogUserPermissionApply',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('apply_time', models.DateTimeField(auto_now_add=True, help_text='申请时间')),
                ('apply_msg', models.CharField(help_text='申请理由', max_length=255)),
                ('status', models.IntegerField(choices=[(1, '申请中'), (2, '审批完成'), (3, '取消申请')],
                                               default=1, help_text='申请状态')),
                ('check_result', models.IntegerField(blank=True, choices=[(1, '审批通过'), (2, '审批不通过')],
                                                     help_text='审批结果', null=True)),
                ('check_remark', models.CharField(blank=True, help_text='审批备注', max_length=255, null=True)),
                ('check_time', models.DateTimeField(blank=True, help_text='审批时间', null=True)),
                ('applicant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL,
                                                to='authen.codedoguser')),
                ('checker', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL,
                                              related_name='+', to='authen.codedoguser')),
            ],
        ),
        migrations.AddField(
            model_name='codedoguser',
            name='org',
            field=models.ForeignKey(blank=True, help_text='组织信息', null=True,
                                    on_delete=django.db.models.deletion.SET_NULL, to='authen.organization'),
        ),
    ]
